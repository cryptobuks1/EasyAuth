##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
	root /var/www/html/<easyauth_dir>;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.php index.nginx-debian.html;
	server_name easyauth.example.com
	
	# client certificate, needs to point to the EasyAuth created ca.pem
	ssl_client_certificate /var/www/html/<easyauth_dir>/rootca/ca.pem;
	# make verification optional, so we can display a 403 message to those
	# who fail authentication
	ssl_verify_depth 2;
	ssl_verify_client optional_no_ca;
	access_log /var/log/nginx/easyauth.log;
	error_log /var/log/nginx/easyauth.err debug;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		if (-e $request_filename.php){
			rewrite ^/(.*)$ /$1.php;
		}
		try_files $uri $uri/ =404;
		
	}

	# pass PHP scripts to FastCGI server
	#
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	
		# With php-fpm (or other unix sockets):
		fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
		# With php-cgi (or other tcp sockets):
		#fastcgi_pass 127.0.0.1:9000;
		#these are needed to alias server vars like Apache
		fastcgi_param SSL_CLIENT_CERT       $ssl_client_cert;
		fastcgi_param SSL_CLIENT_RAW_CERT   $ssl_client_raw_cert;
		fastcgi_param SSL_CLIENT_S_DN       $ssl_client_s_dn;
		fastcgi_param SSL_CLIENT_I_DN       $ssl_client_i_dn;
		fastcgi_param SSL_CLIENT_SERIAL     $ssl_client_serial;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}


	listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/<functional live site>/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/<functional live site>/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
